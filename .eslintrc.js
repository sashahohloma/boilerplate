module.exports = {
    env: {
        node: true,
        es2021: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:@stylistic/recommended-extends',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:import/recommended',
        'plugin:promise/recommended'
    ],
    plugins: [
        '@typescript-eslint',
        'import',
        'promise',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        project: 'tsconfig.json',
        ecmaVersion: 2021,
        sourceType: 'module',
    },
    rules: {
        '@stylistic/array-bracket-newline': ['error', 'consistent'],
        '@stylistic/array-bracket-spacing': ['error', 'never'],
        '@stylistic/array-element-newline': ['error', 'consistent'],
        '@stylistic/arrow-parens': ['error', 'always'],
        '@stylistic/arrow-spacing': ['error'],
        '@stylistic/brace-style': ['error', 'stroustrup', {
            'allowSingleLine': false
        }],
        '@stylistic/block-spacing': ['error', 'always'],
        '@stylistic/comma-dangle': ['error', 'always-multiline'],
        '@stylistic/comma-spacing': ['error'],
        '@stylistic/comma-style': ['error', 'last'],
        '@stylistic/func-call-spacing': ['error', 'never'],
        '@stylistic/function-call-argument-newline': ['error', 'consistent'],
        '@stylistic/function-paren-newline': ['error', 'multiline-arguments'],
        '@stylistic/eol-last': ['error'],
        '@stylistic/generator-star-spacing': ['error', {
            before: true,
            after: true,
        }],
        '@stylistic/indent': ['error', 4, {
            'ignoreComments': true
        }],
        '@stylistic/key-spacing': ['error', {
            beforeColon: false,
            afterColon: true,
        }],
        '@stylistic/keyword-spacing': ['error', {
            before: true,
            after: true,
        }],
        '@stylistic/lines-between-class-members': 'off',
        '@stylistic/max-len': ['error', {
            code: 180,
            ignoreComments: true,
            ignoreStrings: true,
        }],
        '@stylistic/max-statements-per-line': ['error', {
            'max': 1
        }],
        '@stylistic/member-delimiter-style': ['error', {
            'multiline': {
                'delimiter': 'semi',
                'requireLast': true
            },
            'singleline': {
                'delimiter': 'semi',
                'requireLast': false
            },
            'multilineDetection': 'brackets'
        }],
        '@stylistic/multiline-ternary': ['error', 'always-multiline'],
        '@stylistic/newline-per-chained-call': ['error', {
            'ignoreChainWithDepth': 3
        }],
        '@stylistic/no-multiple-empty-lines': ['error', {
            max: 2,
            maxEOF: 0,
            maxBOF: 0,
        }],
        '@stylistic/no-trailing-spaces': ['error'],
        '@stylistic/no-whitespace-before-property': ['error'],
        '@stylistic/object-curly-newline': ['error', {
            consistent: true,
        }],
        '@stylistic/object-property-newline': 'off',
        '@stylistic/operator-linebreak': ['error', 'after', {
            overrides: {
                "?": "before",
                ":": "before"
            },
        }],
        '@stylistic/padded-blocks': ['error', {
            blocks: 'never',
            classes: 'always',
        }, {
            allowSingleLineBlocks: true,
        }],
        '@stylistic/padding-line-between-statements': ['error', {
            blankLine: 'always',
            prev: 'try',
            next: '*',
        }, {
            blankLine: 'never',
            prev: 'try',
            next: 'return',
        }],
        '@stylistic/quote-props': ['error', 'consistent'],
        '@stylistic/semi': ['error', 'always'],
        '@stylistic/semi-spacing': ['error'],
        '@stylistic/space-before-function-paren': ['error', 'never'],
        '@stylistic/space-before-blocks': ['error'],
        '@stylistic/space-infix-ops': ['error'],
        '@stylistic/switch-colon-spacing': ['error'],
        '@typescript-eslint/await-thenable': 'error',
        '@typescript-eslint/camelcase': ['off'],
        '@typescript-eslint/explicit-function-return-type': ['error'],
        '@typescript-eslint/explicit-member-accessibility': ['error', {
            overrides: {
                constructors: 'no-public',
            },
        }],
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/naming-convention': ['error', {
            selector: 'interface',
            format: ['PascalCase'],
            custom: {
                regex: '^I[A-Z]',
                match: true,
            },
        }, {
            selector: 'objectLiteralProperty',
            format: ['camelCase', 'snake_case', 'UPPER_CASE'],
            filter: {
                regex: '[a-z]+.',
                match: false,
            },
            leadingUnderscore: 'allow',
        }],
        '@typescript-eslint/no-explicit-any': ['error'],
        '@typescript-eslint/no-magic-numbers': ['warn', {
            ignore: [0, 1, -1, 10, 2, 1000],
            ignoreArrayIndexes: true,
            ignoreNumericLiteralTypes: true,
            ignoreEnums: true,
        }],
        '@typescript-eslint/no-non-null-assertion': 'error',
        '@typescript-eslint/no-this-alias': ['error', {
            allowedNames: ['self'],
        }],
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-call': 'warn',
        '@typescript-eslint/no-unsafe-member-access': 'warn',
        '@typescript-eslint/no-unsafe-return': 'error',
        "@typescript-eslint/no-unused-vars": ['error', {
            ignoreRestSiblings: true,
        }],
        '@typescript-eslint/parameter-properties': ['error', {
            prefer: 'parameter-property',
        }],
        '@typescript-eslint/prefer-for-of': 'error',
        'arrow-body-style': ['error', 'as-needed'],
        'callback-return': ['error'],
        'class-methods-use-this': 'off',
        'curly': ['error', 'all'],
        'default-case': ['error'],
        'eqeqeq': ['error'],
        'func-names': ['error', 'always', {
            generators: 'as-needed',
        }],
        'func-style': ['error', 'expression'],
        'global-require': ['error'],
        'import/named': 'off',
        'import/no-extraneous-dependencies': ['error', {
            devDependencies: true,
        }],
        'import/no-default-export': 'error',
        'import/no-unresolved': 'off',
        'import/order': ['error', {
            'newlines-between': 'never',
            alphabetize: {
                order: 'asc',
                caseInsensitive: true,
            },
            pathGroups: [{
                pattern: '*.json',
                group: 'object',
                position: 'before',
            }],
            groups: [
                'builtin',
                'external',
                'internal',
                'parent',
                'sibling',
                'index',
                'object',
                'type',
            ],
        }],
        'import/prefer-default-export': 'off',
        'init-declarations': ['error'],
        'max-depth': ['warn', 10],
        'max-lines': ['error', 800],
        'max-params': ['warn', 20],
        'multiline-comment-style': ['error', 'separate-lines'],
        'no-await-in-loop': 'off',
        'no-caller': ['error'],
        'no-case-declarations': ['off'],
        'no-console': ['warn'],
        'no-constant-condition': ['off'],
        'no-constructor-return': ['error'],
        'no-continue': 'off',
        'no-duplicate-imports': ['error'],
        'no-empty-function': ['error', {
            allow: ['constructors'],
        }],
        'no-eval': ['error'],
        'no-extra-bind': ['error'],
        'no-extra-boolean-cast': ['off'],
        'no-implied-eval': ['error'],
        'no-label-var': ['error'],
        'no-labels': ['error'],
        'no-mixed-operators': ['warn'],
        'no-multi-spaces': ['error'],
        'no-new-func': ['error'],
        'no-octal-escape': ['error'],
        'no-param-reassign': ['warn'],
        'no-proto': ['error'],
        'no-restricted-syntax': ['error',
            "CallExpression[callee.property.name='forEach']",
            'ForInStatement',
        ],
        'no-return-assign': ['error'],
        'no-return-await': ['error'],
        'no-shadow': ['off'],
        'no-tabs': ['error'],
        'no-this-before-super': ['error'],
        'no-throw-literal': ['error'],
        'no-undef-init': ['off'],
        'no-underscore-dangle': ['error', {
            allow: ['_id', '_source'],
            allowAfterSuper: true,
            allowAfterThis: true,
            allowAfterThisConstructor: true,
        }],
        'no-unneeded-ternary': ['error'],
        'no-unreachable': ['error'],
        'no-unused-expressions': ['error'],
        'no-use-before-define': ['off'],
        'prefer-destructuring': ['error', {
            array: false,
            object: false,
        }, {
            enforceForRenamedProperties: false,
        }],
        'prefer-promise-reject-errors': ['error'],
        'prefer-regex-literals': ['warn'],
        'promise/prefer-await-to-then': 'error',
        'prefer-spread': ['error'],
        'radix': ['error', 'as-needed'],
        'require-await': ['error'],
        'strict': ['error'],

        // Deprecated to @stylistic
        'array-bracket-newline': 'off',
        'array-bracket-spacing': 'off',
        'array-element-newline': 'off',
        'arrow-parens': 'off',
        'arrow-spacing': 'off',
        'brace-style': 'off',
        'block-spacing': 'off',
        'comma-dangle': 'off',
        'comma-spacing': 'off',
        'comma-style': 'off',
        'func-call-spacing': 'off',
        'function-call-argument-newline': 'off',
        'function-paren-newline': 'off',
        'eol-last': 'off',
        'generator-star-spacing': 'off',
        'indent': 'off',
        'key-spacing': 'off',
        'keyword-spacing': 'off',
        'lines-between-class-members': 'off',
        'max-len': 'off',
        'max-statements-per-line': 'off',
        'member-delimiter-style': 'off',
        'multiline-ternary': 'off',
        'newline-per-chained-call': 'off',
        'no-multiple-empty-lines': 'off',
        'no-trailing-spaces': 'off',
        'no-whitespace-before-property': 'off',
        'object-curly-newline': 'off',
        'object-property-newline': 'off',
        'operator-linebreak': 'off',
        'padded-blocks': 'off',
        'padding-line-between-statements': 'off',
        'quote-props': 'off',
        'semi': 'off',
        'semi-spacing': 'off',
        'space-before-function-paren': 'off',
        'space-before-blocks': 'off',
        'space-infix-ops': 'off',
        'switch-colon-spacing': 'off',
    },
};
